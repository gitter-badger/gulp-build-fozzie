'use strict';function _toConsumableArray(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}return Array.from(a)}var gulp=require('gulp'),changed=require('gulp-changed'),swPrecache=require('sw-precache'),filenames=require('gulp-filenames'),runSequence=require('run-sequence'),gutil=require('gulp-util'),pathBuilder=require('../pathBuilder'),config=require('../config');gulp.task('service-worker',function(a){runSequence(['service-worker:copy','service-worker:locate'],'service-worker:write',a)}),gulp.task('service-worker:write',function(){var a=config.sw.dynamicFileRegex.map(function(a){return{urlPattern:a,handler:config.sw.dynamicFileStrategy}});swPrecache.write(pathBuilder.swOutputPath,{cacheId:config.sw.cacheId,importScripts:config.sw.importScripts.concat(filenames.get('service-worker-scripts')),staticFileGlobs:config.sw.staticFileGlobs,runtimeCaching:a,logger:gutil.log})}),gulp.task('service-worker:copy',function(){return gulp.src([pathBuilder.swSrcDir+'/**/*'].concat(_toConsumableArray(config.sw.importScripts))).pipe(changed(pathBuilder.swDistDir)).pipe(gulp.dest(pathBuilder.swDistDir))}),gulp.task('service-worker:locate',function(){return gulp.src(pathBuilder.swSrcDir+'/**/*').pipe(filenames('service-worker-scripts'))});